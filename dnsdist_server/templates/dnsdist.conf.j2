-- Client listeners
{% if dnsdist_listen_plain53 %}
addLocal('{{ dnsdist_listen_ipv4 }}:{{ dnsdist_listen_plain53_port }}')
addLocal('[{{ dnsdist_listen_ipv6 }}]:{{ dnsdist_listen_plain53_port }}')
{% endif %}

{% if dnsdist_listen_dot %}
addTLSLocal('{{ dnsdist_listen_ipv4 }}:{{ dnsdist_listen_dot_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'}, {minTLSVersion='tls1.2', ciphers='ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-CHACHA20-POLY1305,ECDHE-RSA-CHACHA20-POLY1305'})
addTLSLocal('[{{ dnsdist_listen_ipv6 }}]:{{ dnsdist_listen_dot_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'}, {minTLSVersion='tls1.2', ciphers='ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-CHACHA20-POLY1305,ECDHE-RSA-CHACHA20-POLY1305'})
{% endif %}

{% if dnsdist_listen_doh %}
addDOHLocal('{{ dnsdist_listen_ipv4 }}:{{ dnsdist_listen_doh_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'}, { "/", "/dns-query" }, {minTLSVersion='tls1.2', ciphers='ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-CHACHA20-POLY1305,ECDHE-RSA-CHACHA20-POLY1305', customResponseHeaders={ {% for header in dnsdist_doh_custom_headers %}["{{ header.name }}"]="{{ header.value }}"{% if not loop.last %}, {% endif %}{% endfor %} }})
addDOHLocal('[{{ dnsdist_listen_ipv6 }}]:{{ dnsdist_listen_doh_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'}, { "/", "/dns-query" }, {minTLSVersion='tls1.2', ciphers='ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-CHACHA20-POLY1305,ECDHE-RSA-CHACHA20-POLY1305', customResponseHeaders={ {% for header in dnsdist_doh_custom_headers %}["{{ header.name }}"]="{{ header.value }}"{% if not loop.last %}, {% endif %}{% endfor %} }})
{% endif %}

{% if dnsdist_listen_doh3 %}
addDOH3Local('{{ dnsdist_listen_ipv4 }}:{{ dnsdist_listen_doh3_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'})
addDOH3Local('[{{ dnsdist_listen_ipv6 }}]:{{ dnsdist_listen_doh3_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'})
{% endif %}

{% if dnsdist_listen_doq %}
addDOQLocal('{{ dnsdist_listen_ipv4 }}:{{ dnsdist_listen_doq_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'})
addDOQLocal('[{{ dnsdist_listen_ipv6 }}]:{{ dnsdist_listen_doq_port }}', {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.ecdsa.crt'}, {'{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key', '{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.ecdsa.key'})
{% endif %}


-- Upstream DNS servers
{% for server in dnsdist_servers %}
{% if server.comment is defined %}
-- {{ server.comment }}
{% endif %}
newServer ({
    address="{{ server.address }}",
{% if server.name is defined %}
    name="{{ server.name }}",
{% endif %}
{% if server.qps is defined %}
    qps={{ server.qps }},
{% endif %}
})

{% endfor %}

-- ACL
{% for prefix in dnsdist_acl %}
addACL('{{ prefix }}')
{% endfor %}

-- Cache
pc = newPacketCache(100000, {maxTTL=86400, minTTL=0, temporaryFailureTTL=60, staleTTL=60, dontAge=false})
getPool(""):setCache(pc)

-- Console management
controlSocket('127.0.0.1:5199')
controlSocket('[::1]:5199')
-- generate with: openssl rand 32 | base64
setKey("{{ dnsdist_console_key_base64 }}")
addConsoleACL("{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}/32")
addConsoleACL("{{ ansible_default_ipv6.address|default(ansible_all_ipv6_addresses[0]) }}/128")

-- Web management
webserver("{{ dnsdist_web_mgmt_v4_listen_ip }}:{{ dnsdist_web_mgmt_v4_listen_port }}")
webserver("[{{ dnsdist_web_mgmt_v6_listen_ip }}]:{{ dnsdist_web_mgmt_v4_listen_port }}")
setWebserverConfig({password="{{ dnsdist_web_password_hash }}", apiKey="{{ dnsdist_web_apikey_hash }}", acl="{{ dnsdist_web_acl|join(',') }}"})

-- custom config below here
{{ dnsdist_extra_config|default("") }}
