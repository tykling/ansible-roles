@version:4.8
@include "scl.conf"

#
# these options are suitable for both relays and the final destination
# hostname will be client-hostname-from-the-message / client-hostname-resolved-on-the-relay / relay-hostname-resolved-on-the-server 
#
options {
{% if syslogng_upstream_elk %}
    # keep relay hostname so ELK can see it
    chain_hostnames(yes);
{% else %}
    chain_hostnames(no);
{% endif %}
    keep_hostname(no);
    flush_lines(0);
    threaded(yes);
    use_fqdn(yes);
    use-dns(yes);
    stats(freq(60) level(0));
    ts-format(iso);
};

##################### SOURCES ##############################

source syslogng { internal(); };

source src {
{% if syslogng_tls_listener %}
    syslog(
        ip("{{ syslogng_listen_ipv4 }}")
        port("1999")
        transport("tls")
        tls(
            # require a valid and trusted client cert
            peer-verify(required-trusted)
{% if syslogng_trusted_client_dn is string %}
            trusted-dn("{{ syslogng_trusted_client_dn }}")
{% else %}
            trusted-dn({% for dn in syslogng_trusted_client_dn %}"{{ dn }}" {% endfor %})
{% endif %}
            ca-dir("{{ syslogng_cadir }}")
            key_file("{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key")
            cert_file("{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt")
        )
    );
    syslog(
        ip("{{ syslogng_listen_ipv6 }}")
        port("1999")
        transport("tls")
        ip-protocol(6)
        tls(
            # require a valid and trusted client cert
            peer-verify(required-trusted)
            trusted-dn("{{ syslogng_trusted_client_dn }}")
            ca-dir("{{ syslogng_cadir }}")
            key_file("{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key")
            cert_file("{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt")
        )
    );
{% endif %}
    network(
        ip("{{ syslogng_listen_ipv4 }}")
        port(514)
        transport(udp)
        ip-protocol(4)
    );
    network(
        ip("{{ syslogng_listen_ipv6 }}")
        port(514)
        transport(udp)
        ip-protocol(6)
    );
};

##################### DESTINATIONS ##############################

# the local system syslog servers socket
destination localsyslog {
    unix-dgram("/var/run/log");
};

{% if syslogng_upstream_server or syslogng_upstream_elk %}
# network destination(s)
destination remote{
{% if syslogng_upstream_server %}
    syslog(
        "{{ syslogng_upstream_server }}"
        transport("tls")
        port(1999)
        tls(
            # require a valid and trusted server cert
            peer-verify(required-trusted)
            ca-dir("{{ syslogng_cadir }}")
            # these are here so the server can authenticate the client too
            key_file("{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-keypair.rsa.key")
            cert_file("{{ certgrinder_home }}/certificates/{{ ansible_nodename }}-chain.rsa.crt")
        )
        log-fifo-size(100000)
    );
{% endif %}
{% if syslogng_upstream_elk %}
    network(
        "127.0.0.1"
        port(5000)
        transport(tcp)
        log-fifo-size(100000)
    );
{% endif %}
};
{% endif %}

{% if syslogng_plaintext_archive %}
# local file destination
destination file{
    file(
        "/var/log/syslogng/${HOST}/${YEAR}-${MONTH}-${DAY}/${FACILITY}.log"
        template("${YEAR}-${MONTH}-${DAY} ${HOUR}:${MIN}:${SEC} ${TZ} ${HOST} [${FACILITY}.${LEVEL}] ${MESSAGE}\n")
        template-escape(no)
        create-dirs(yes)
    );
};
{% endif %}


{% if syslogng_extra_destinations is defined %}
# custom destination config below here
{{ syslogng_extra_destinations }}
{% endif %}

##################### LOGGING ##############################

# send just the internal syslog-ng messages to the local system syslog
log { source(syslogng); destination(localsyslog); };

{% if syslogng_upstream_server or syslogng_upstream_elk %}
# send to the network destination(s)
log { source(src); source(syslogng); destination(remote); flags(flow-control); };
{% endif %}
{% if syslogng_plaintext_archive %}
# log to file destination
log { source(src); source(syslogng); destination(file); flags(flow-control); };
{% endif %}


{% if syslogng_extra_logging is defined %}
# custom logging config below here
{{ syslogng_extra_logging }}
{% endif %}
