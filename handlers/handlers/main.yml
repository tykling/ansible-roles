---
### alertmanager_server
- name: "restart alertmanager"
  community.general.supervisorctl:
    name: "alertmanager"
    state: "restarted"


### bind_server
- name: "restart bind"
  community.general.supervisorctl:
    name: "bind"
    state: "restarted"

- name: "reload bind"
  command: "/usr/local/sbin/rndc reload"


### bird2_server
- name: "start bird2"
  community.general.supervisorctl:
    name: "bird2"
    state: "started"

- name: "restart bird2"
  community.general.supervisorctl:
    name: "bird2"
    state: "restarted"

- name: "reconfigure bird2"
  command: "/usr/local/sbin/birdc configure"

- name: "carpconfigure bird2"
  command: "/usr/local/etc/carpcontrol.d/any/any/bird2 ansible deployed"

- name: "restart bird_exporter"
  community.general.supervisorctl:
    name: "bird_exporter"
    state: "restarted"


### blackbox_exporter_server
- name: "restart blackbox_exporter"
  community.general.supervisorctl:
    name: "blackbox_exporter"
    state: "restarted"

- name: "reload blackbox_exporter"
  command: "/usr/local/bin/supervisorctl signal HUP blackbox_exporter"

- name: "restart ssl_exporter"
  community.general.supervisorctl:
    name: "ssl_exporter"
    state: "restarted"


### certgrinder_client
- name: "certgrinder ssh key created email"
  community.general.mail:
    to: "{{ certgrinder_admin_email }}"
    subject: "new certgrinder_client ssh key generated on host {{ ansible_nodename }}"
    body: "Ansible has generated a new SSH key on certgrinder_client host {{ ansible_nodename }}. Please add it to certgrinder_authorized_keys on {{ certgrinder_ssh_server }}, and then rerun ansible for {{ ansible_nodename }} again to issue proper certificates."


### ctld_server
- name: "start ctld"
  service:
    name: "ctld"
    state: "started"

- name: "reload ctld"
  service:
    name: "ctld"
    state: "reloaded"


### freebsd_host
- name: "restart devd"
  service:
    name: "devd"
    state: "restarted"


### django_channels2_server
- name: "restart daphne using supervisorctl"
  community.general.supervisorctl:
    name: "daphne"
    state: "restarted"
  when: "django_channels_daphne"

- name: "restart supervisord_extra_programs"
  community.general.supervisorctl:
    name: "{{ item.name }}"
    state: "restarted"
  with_items: "{{ supervisord_extra_programs | default({}) }}"


### dmarc exporter
- name: "restart dmarc-metrics-exporter"
  community.general.supervisorctl:
    name: "dmarc-metrics-exporter"
    state: "restarted"

### dns_exporter
- name: "restart dns_exporter"
  community.general.supervisorctl:
    name: "dns_exporter"
    state: "restarted"


### dnsdist_server
- name: "restart dnsdist"
  community.general.supervisorctl:
    name: "dnsdist"
    state: "restarted"


### dovecot_server
- name: "Start dovecot"
  service:
    name: "dovecot"
    state: "started"

- name: "Reload dovecot"
  service:
    name: "dovecot"
    state: "reloaded"


### elk_server
- name: "start elasticsearch"
  service:
    name: "elasticsearch"
    state: "started"

- name: "restart elasticsearch"
  service:
    name: "elasticsearch"
    state: "restarted"

- name: "start logstash"
  service:
    name: "logstash"
    state: "started"

- name: "restart logstash"
  service:
    name: "logstash"
    state: "restarted"

- name: "start kibana"
  service:
    name: "kibana"
    state: "started"

- name: "restart kibana"
  service:
    name: "kibana"
    state: "restarted"


### freebsd_base
- name: "restart exporter_exporter"
  community.general.supervisorctl:
    name: "exporter_exporter"
    state: "restarted"


### fail2ban_server
- name: "restart fail2ban"
  service:
    name: "fail2ban"
    state: "restarted"

- name: "reload fail2ban"
  service:
    name: "fail2ban"
    state: "reloaded"


### grafana_server
- name: "restart grafana"
  community.general.supervisorctl:
    name: "grafana"
    state: "restarted"


### freebsd_host
- name: "restart gstat_exporter"
  community.general.supervisorctl:
    name: "gstat_exporter"
    state: "restarted"


### freebsd_host
- name: "restart inetd"
  service:
    name: "inetd"
    state: "restarted"

- name: "reload inetd"
  service:
    name: "inetd"
    state: "reloaded"


### isc_dhcpd_server
- name: "restart isc dhcpd"
  service:
    name: "isc-dhcpd"
    state: "restarted"

- name: "restart isc dhcpd6"
  service:
    name: "isc-dhcpd6"
    state: "restarted"


### jail_host
- name: "restart jail_exporter"
  community.general.supervisorctl:
    name: "jail_exporter"
    state: "restarted"


### kea_server
- name: "Reload kea"
  service:
    name: "kea"
    state: "reloaded"

### freebsd_host
- name: "load AESNI module"
  command: "/sbin/kldload aesni"
  ignore_errors: yes

- name: "kldload coretemp module"
  command: "/sbin/kldload coretemp"
  ignore_errors: yes

- name: "load tcpmd5 module"
  command: "/sbin/kldload tcpmd5"
  ignore_errors: yes


### motion_server
- name: "restart motion"
  community.general.supervisorctl:
    name: "motion"
    state: "restarted"


### nfs_server
- name: "reload mountd"
  service:
    name: "mountd"
    state: "reloaded"


### freebsd_base
- name: "rename sequential logs"
  shell: |
    INCLUDEPATHS=$(cat /etc/newsyslog.conf | grep "^<include>" | cut -d " " -f 2)
    for LOGPATH in $(cat /etc/newsyslog.conf $INCLUDEPATHS | grep -Ev "^(#|$|<include>)" | awk "{print \$1}" | sed -e 's,/[^/]*$,,' | sort -u); do
        for EXT in bz2 xz; do
            for FILE in $(ls -1 ${LOGPATH}/*.${EXT}); do
                MTIME=$(stat -f %Sm -t "%Y%m%dT%H%M%S" ${FILE})
                NEWNAME=$(echo $(basename ${FILE}) | sed -E "s/(.+)\.[0-9]+\.${EXT}/\1.${MTIME}.${EXT}/")
                mv ${FILE} $(dirname ${FILE})/${NEWNAME}
            done
        done
    done


### kiwiirc
- name: "restart webircgateway"
  community.general.supervisorctl:
    name: "webircgateway"
    state: "restarted"


### loki
- name: "restart loki"
  community.general.supervisorctl:
    name: "loki"
    state: "restarted"

- name: "restart promtail"
  community.general.supervisorctl:
    name: "promtail"
    state: "restarted"


### mosquitto
- name: "start mosquitto"
  community.general.supervisorctl:
    name: "mosquitto"
    state: "started"

- name: "reload mosquitto"
  command: "/usr/local/bin/supervisorctl signal HUP mosquitto"

- name: "restart mqtt2prom instance"
  community.general.supervisorctl:
    name: "mqtt2prometheus_{{ m2p.key }}"
    state: "restarted"


### nfsen_server
- name: "reload nfsen"
  service:
    name: "nfsen"
    state: "reloaded"


### nginx_server
- name: "restart nginx_exporter"
  community.general.supervisorctl:
    name: "nginx_exporter"
    state: "restarted"

- name: "start nginx"
  service:
    name: "nginx"
    state: "started"

- name: "reload nginx"
  service:
    name: "nginx"
    state: "reloaded"


### node_exporter
- name: "restart node_exporter"
  community.general.supervisorctl:
    name: "node_exporter"
    state: "restarted"


### nullmailer
- name: "start nullmailer"
  service:
    name: "nullmailer"
    state: "started"

- name: "restart nullmailer"
  service:
    name: "nullmailer"
    state: "restarted"

### nut_server
- name: "start nut"
  service:
    name: "nut"
    state: "started"

- name: "restart nut"
  service:
    name: "nut"
    state: "restarted"

- name: "start upsmon"
  service:
    name: "nut_upsmon"
    state: "started"

- name: "restart upsmon"
  service:
    name: "nut_upsmon"
    state: "restarted"


### openbgpd_server
- name: "reload openbgpd"
  command: "/usr/local/sbin/bgpctl reload"

### pf_host
- name: "kldload pf module"
  command: "/sbin/kldload pf"
  ignore_errors: True

- name: "kldload pflog module"
  command: "/sbin/kldload pflog"
  ignore_errors: True

- name: "reload pf"
  service:
    name: "pf"
    state: "reloaded"

- name: "kldload carp module"
  command: "/sbin/kldload carp"

- name: "restart pfctl-exporter"
  community.general.supervisorctl:
    name: "pfctl-exporter"
    state: "restarted"


### postgresql_server
- name: "restart pgbouncer"
  community.general.supervisorctl:
    name: "pgbouncer"
    state: "restarted"

# revisit
- name: "reload pgbouncer"
  command: "id"

- name: "restart postgres_exporter"
  community.general.supervisorctl:
    name: "postgres_exporter"
    state: "restarted"

- name: "restart postgresql"
  community.general.supervisorctl:
    name: "postgresql"
    state: "restarted"

- name: "reload postgresql"
  command: "su -l postgres -c '/usr/local/bin/pg_ctl -D {{ postgresql_datadir }} reload'"


### php_fpm_server
- name: "reload php_fpm"
  service:
    name: "php_fpm"
    state: "reloaded"


### postfix_server
- name: "restart postfix"
  service:
    name: "postfix"
    state: "restarted"

- name: "reload postfix"
  service:
    name: "postfix"
    state: "reloaded"

### poudriere_server
- name: "start qemu_user_static"
  service:
    name: "qemu_user_static"
    state: "started"

### powerdns_recursor_server
- name: "restart powerdns-recursor"
  community.general.supervisorctl:
    name: "powerdns_recursor"
    state: "restarted"


### freebsd_base
- name: "start process accounting"
  command: "/usr/sbin/accton {{ process_accounting_file }}"

### prometheus_server
- name: "restart prometheus"
  community.general.supervisorctl:
    name: "prometheus"
    state: "restarted"


### prosody_server
- name: "Start prosody" 
  service:
    name: "prosody"
    state: "started"

- name: "Reload prosody" 
  service:
    name: "prosody"
    state: "reloaded"


### rt_server
- name: "clear rt mason cache"
  file:
    path: "/var/run/rt44/mason_data/obj/"
    state: "absent"

- name: "restart rt"
  shell: "/usr/local/bin/supervisorctl restart rt:"


### smartmontools
- name: "reload smartd"
  service:
    name: "smartd"
    state: "reloaded"


### smokeping_prober
- name: "restart smokeping_prober"
  community.general.supervisorctl:
    name: "smokeping_prober"
    state: "restarted"

### snmp_exporter
- name: "restart snmp_exporter"
  community.general.supervisorctl:
    name: "snmp_exporter"
    state: "restarted"

### spawn_fcgi_server
- name: "restart spawn-fcgi"
  service:
    name: "spawn-fcgi"
    state: "restarted"

### speedtest_server
- name: "restart speedtest"
  community.general.supervisorctl:
    name: "ooklaserver"
    state: "restarted"

### sshd
- name: "restart sshd"
  service:
    name: "sshd"
    state: "restarted"

- name: "reload sshd"
  service:
    name: "sshd"
    state: "reloaded"


### stubby
- name: "start stubby"
  community.general.supervisorctl:
    name: "stubby"
    state: "started"

- name: "restart stubby"
  community.general.supervisorctl:
    name: "stubby"
    state: "restarted"


### supervisord_server
- name: "start supervisord"
  service:
    name: "supervisord"
    state: "started"

- name: "reread supervisord config"
  command: "/usr/local/bin/supervisorctl reread"

- name: "update supervisord config"
  command: "/usr/local/bin/supervisorctl update"

### sysctl
- name: "reload sysctl.conf"
  service:
    name: "sysctl"
    state: "reloaded"

### syslogd
- name: "restart syslogd"
  service:
    name: "syslogd"
    state: "restarted"

### syslog-ng
- name: "reload syslog-ng"
  service:
    name: "syslog-ng"
    state: "reloaded"

### tor_server
- name: "reload tor"
  service:
    name: "tor"
    state: "reloaded"

### unbound_server
- name: "start unbound"
  community.general.supervisorctl:
    name: "unbound"
    state: "started"

- name: "restart unbound"
  community.general.supervisorctl:
    name: "unbound"
    state: "restarted"


### uwsgi_server
- name: "restart uwsgi_exporter"
  community.general.supervisorctl:
    name: "uwsgi_exporter"
    state: "restarted"

- name: "restart uwsgi"
  community.general.supervisorctl:
    name: "uwsgi"
    state: "restarted"

- name: "touch-chain-reload uwsgi"
  file:
    path: "{{ uwsgi_touchchainreloadpath }}"
    state: "touch"

### zabbix_server
- name: "restart zabbix server"
  service:
    name: "zabbix_server"
    state: "restarted"

- name: "restart zabbix proxy"
  service:
    name: "zabbix_proxy"
    state: "restarted"
